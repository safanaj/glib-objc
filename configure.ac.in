dnl configure.ac
dnl
dnl glib-objc - objective-c bindings for glib
dnl
dnl Copyright (c) 2008 Brian Tarricone <bjt23@cornell.edu>
dnl

dnl version info
m4_define([libgobject_verinfo], [0:0:0])
m4_define([go_version_major], [0])
m4_define([go_version_minor], [1])
m4_define([go_version_micro], [0])
m4_define([go_version_build], [@REVISION@])
m4_define([go_version_tag], [git])
m4_define([go_version], [go_version_major().go_version_minor().go_version_micro()ifelse(go_version_tag(), [git], [go_version_tag()-go_version_build()], [go_version_tag()])])

dnl init autoconf
AC_INIT([glib-objc], [go_version], [bjt23@cornell.edu])
AC_PREREQ([2.59])

dnl init automake
AM_INIT_AUTOMAKE([dist-bzip2])
AM_CONFIG_HEADER([config.h])
AM_MAINTAINER_MODE

dnl check for UNIX variants
AC_AIX
AC_ISC_POSIX
AC_MINIX

dnl check for basic programs
AC_PROG_CC
AC_PROG_OBJC
AM_PROG_CC_C_O
AC_PROG_INSTALL
AC_PROG_LIBTOOL

dnl check for standard header files
AC_HEADER_STDC

dnl version information
GO_VERSION=go_version
LIBGOBJECT_VERINFO=libgobject_verinfo
AC_SUBST(GO_VERSION)
AC_SUBST(LIBGOBJECT_VERINFO)

dnl required
PKG_CHECK_MODULES([GOBJECT], [gobject-2.0 >= 2.12.0], , [AC_MSG_ERROR([
*** GObject (a part of the Glib library) version 2.12.0 or greater is required.
*** You can download it from http://gtk.org/
])])
AC_MSG_CHECKING([GOBJECT_CFLAGS])
AC_MSG_RESULT([$GOBJECT_CFLAGS])
AC_MSG_CHECKING([GOBJECT_LIBS])
AC_MSG_RESULT([$GOBJECT_LIBS])

FOUNDATION_CFLAGS=
FOUNDATION_LIBS=

AC_ARG_WITH([gnustep],
            AC_HELP_STRING([--with-gnustep=PREFIX],
                           [Specify the root of where GNUStep is installed]),
            [gnustep_root=$withval])
if test "x$gnustep_root" != "x"; then
    FOUNDATION_CFLAGS="-I$gnustep_root/System/Library/Headers"
    if test "x$GCC" = "xyes"; then
        FOUNDATION_CFLAGS="$FOUNDATION_CFLAGS -fconstant-string-class=NSConstantString"
    fi
    FOUNDATION_LIBS="-L$gnustep_root/System/Library/Libraries -lgnustep-base"
else
    dnl check to see if we're on MacOS X
    case "$host_os" in
        macos*)
            FOUNDATION_CFLAGS=
            FOUNDATION_LIBS="-Wl,-framework,Foundation"
            ;;
        *)
            # we should try to search more places
            FOUNDATION_CFLAGS=
            FOUNDATION_LIBS="-lgnustep-base"
            ;;
    esac
fi

dnl make sure Foundation works
AC_MSG_CHECKING([for a working Foundation])
AC_LANG_PUSH([Objective C])
saved_OBJCFLAGS="$CFLAGS"
saved_LIBS="$LIBS"
OBJCFLAGS="$OBJCFLAGS $FOUNDATION_CFLAGS"
LIBS="$LIBS $FOUNDATION_LIBS"
AC_LINK_IFELSE(
changequote(<<, >>)dnl
<<#include <Foundation/Foundation.h>
int main() {
    [[[[NSAutoreleasePool alloc] init] release]];
    return 0;
}
>>
changequote([, ])dnl
, [AC_MSG_RESULT([yes])],
[
AC_MSG_RESULT([no])
echo '*** A working Foundation library was not found.  If using GNUStep, please'
echo '*** specify the GNUStep root directory with --with-gnustep.  If compiling'
echo '*** for MacOS X, file a bug, because this should be figured out automatically.'
exit 1
])
OBJCFLAGS="$saved_OBJCFLAGS"
LIBS="$saved_LIBS"
AC_LANG_POP()
AC_MSG_CHECKING([FOUNDATION_CFLAGS])
AC_MSG_RESULT([$FOUNDATION_CFLAGS])
AC_MSG_CHECKING([FOUNDATION_LIBS])
AC_MSG_RESULT([$FOUNDATION_LIBS])
AC_SUBST([FOUNDATION_CFLAGS])
AC_SUBST([FOUNDATION_LIBS])

dnl check for debugging support
AC_ARG_ENABLE([debug],
              [AC_HELP_STRING([--enable-debug=[full|yes|no]],
                              [Build with debugging support])
               AC_HELP_STRING([--disable-debug],
                              [Include no debugging support (default)])],
              [], [enable_debug=no])
AC_MSG_CHECKING([whether to build with debugging support])
if test "x$enable_debug" = "xno"; then
    AC_MSG_RESULT([no])
else
    AC_DEFINE([DEBUG], [1], [Define if debugging support is enabled])
    if test "x$GCC" = "xyes"; then
        if test "x$enable_debug" = "xfull"; then
            DEBUG_CFLAGS="-Wall -Wno-deprecated-declarations -g3 -Werror -fno-strict-aliasing"
        else
            DEBUG_CFLAGS="-Wall -g"
        fi
    fi
    DEBUG_CFLAGS="$DEBUG_CFLAGS -DG_DISABLE_DEPRECATED"
    
    CFLAGS="$CFLAGS $DEBUG_CFLAGS"
    OBJCFLAGS="$OBJCFLAGS $DEBUG_CFLAGS"
    CXXFLAGS="$CXXFLAGS $DEBUG_CFLAGS"
fi

AC_OUTPUT([
Makefile
gobject/Makefile
])
